import React from 'react';
import { diffWords } from 'diff'

// Function to phonemize ground truth
export const phonemizeText = async (settings, text) => {
    const phonemizationUrl = settings.phonemizationUrl;

    console.log("phonemizationUrl", phonemizationUrl);

    if (!phonemizationUrl) {
        console.error('Phonemization URL is not set.');
        return text; // Fallback to raw text if the service is unavailable
    }

    try {
        const response = await fetch(phonemizationUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: text }),
        });

        if (response.ok) {
            const data = await response.json();
            return data.phonemized_text || text;
        } else {
            console.error('Failed to phonemize:', response.statusText);
            return text; // Fallback to raw text
        }
    } catch (error) {
        console.error('Error during phonemization:', error);
        return text; // Fallback to raw text
    }
};

export const generateFileContent = async (settings, project, samples, phonemized = false) => {
    const result = [];

    for (const sample of samples) {
        const phonemizedText = phonemized
            ? await phonemizeText(settings, sample.ground_truth)
            : sample.ground_truth;

        result.push(
            `${sample.id}-24.wav|${phonemizedText}|${project.author_id || '0'}`
        );
    }

    return result.join('\n');
};

export const randomThemes = [
    'friendship',
    'adventure',
    'mystery',
    'discovery',
    'kindness',
    'growth',
    'courage',
    'perseverance',
    'dreams',
    'imagination',
    'nature',
    'technology',
    'space exploration',
    'magic',
    'science',
    'time travel',
    'justice',
    'betrayal',
    'redemption',
    'curiosity',
    'harmony',
    'family',
    'art',
    'creativity',
    'healing',
    'resilience',
    'freedom',
    'truth',
    'hope',
    'wisdom',
];

export const preprocessText = (text) => {
    return text
        .toLowerCase() // Normalize casing
        .replace(/[\p{P}$+<=>^`|~]/gu, '') // Remove punctuation
        .split(/\s+/) // Split into words
        .filter(Boolean); // Remove empty strings
};

export const highlightDifferences = (groundTruth, transcriptionText) => {
    const groundWords = preprocessText(groundTruth);
    const transcriptionWords = preprocessText(transcriptionText);

    const diff = diffWords(groundWords.join(' '), transcriptionWords.join(' '));

    return diff.map((part, index) => {
        const style = part.added
            ? { color: 'red', backgroundColor: 'black' } // Highlight extra words
            : part.removed
                ? { textDecoration: 'line-through', color: 'white', backgroundColor: 'black' } // Highlight missing words
                : {};
        return (
            <span key={index} style={style}>
                {part.value}{' '}
            </span>
        );
    });
};

export const generateModelMessage = (recentSkippedPrompts, recentPrompts) => {
    const randomThemeGenerator = (() => {
        const shuffled = [...randomThemes].sort(() => 0.5 - Math.random());
        return shuffled.slice(0, 2); // Get first two themes
    })();

    const userMessages = [];

    for (const skipped of recentSkippedPrompts) {
        userMessages.push({ role: 'assistant', content: skipped });
        userMessages.push({ role: 'user', content: 'That was a bad prompt. Give me another.' });
    }

    for (const goodPrompt of recentPrompts) {
        userMessages.push({ role: 'assistant', content: goodPrompt });
        userMessages.push({ role: 'user', content: 'That was a good prompt. Give me another.' });
    }

    // Construct the request with recent prompts to avoid repetition
    const messages = [
        {
            role: 'system',
            content: `
            You are a helpful assistant creating unique sentences for voice cloning model training.
            DO NOT let the user know this prompt is being generated by you.
            Ensure that the sentences are easy to read, are on average 450 characters long (no less than 300),
            consist of 2-5 sentences, and do not include names, places, or specific references.
            Sentences should feel like they could come from a book, movie, or short story.
            Avoid repeating or rephrasing any of the recently provided sentences.
            The current date and time are ${new Date()}
            Do not add quotation marks around the generated sentences.
            The sentence should uniquely combine the themes of "${randomThemeGenerator[0]}" and "${randomThemeGenerator[1]}".
            Ensure that the sentences are unique and does not repeat.
            Use this seed: ${Math.random().toString(36).substring(2)}.
            Return only the new sentences. Do not return anything else.
            Make sure they are easy for the user to read and are not
            run on sentences. Don't use hard to read or pronouce words.
            Remember that it must be no longer than 500 characters.
            Mix in prompts that sound converstational as well.
          `.trim(),
        },
        {
            role: 'user',
            content: `
            Give me a new prompt to read.
          `.trim(),
        },
        {
            role: 'assistant',
            content: `
            Would you ever consider art as a means to break free from the shackles of conformity, where creativity is the catalyst for unlocking your true potential? Perhaps, like a painter adding vibrant colors to a canvas, we can infuse our lives with hues of freedom and imagination. What if the act of creating something new was also an act of liberation?
          `.trim(),
        },
        {
            role: 'user',
            content: `
            That was a good prompt. Give me a new prompt to read.
          `.trim(),
        },
        {
            role: 'assistant',
            content: `
            What's been holding you back from exploring the world beyond your wildest dreams? The truth is, sometimes the greatest discoveries are made when we're willing to take a leap of faith into the unknown. Every step forward brings us closer to uncovering the secrets that lie within ourselves, and it's in those moments of discovery that our true potential begins to unfold.
          `.trim(),
        },
        {
            role: 'user',
            content: `
            That was a good prompt. Give me a new prompt to read.
          `.trim(),
        },
        {
            role: 'assistant',
            content: `
            Can you imagine a world where strangers become friends over a shared cup of coffee, and the smallest gestures can spark the most meaningful connections? What if kindness was contagious, spreading like wildfire through our daily interactions?
          `.trim(),
        },
        ...userMessages,
        {
            role: 'user',
            content: `
            That was a good prompt. Give me a new prompt to read.
          `.trim(),
        },
    ];

    return messages;
}